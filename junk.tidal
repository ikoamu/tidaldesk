import qualified Sound.Tidal.Tempo as T

resetCyclesTo n = T.changeTempo (sTempoMV tidal) (\t tempo -> tempo {T.atTime = t, T.atCycle = n})

do
  d1
    $ whenmod 2 1 (>| note (scale "major" "5 _ 5 6 8 ~"))
    $ note (scale "major" "5 _ 5 _ 8 ~")
    # sound "superfm"
    # gain 0.0
    # delay 1
  d2
    $ s "hh" # gain 0.8
  d3
    $ s "~ kicklinn"
  d4
    $ fix (# size 2) (n (scale "major" "0"))
    $ whenmod 16 15 (>| note (scale "major" "1 1 1 0  _ 1 0 1 1 0 _ 0"))
    $ whenmod 4 3 (>| note   (scale "major" "0 1 ~ 0  _ 2 0 1 ~ 0 _ 2"))
    $ whenmod 2 1 (>| note   (scale "major" "0 _ 1 2  0 ~"))
    $ note                   (scale "major" "0 _ 0 2 1 ~")
    # sound "kurt"
    # gain 0.0
    # delay 0.2 
  d5
    $ whenmod 2 1 (>| note   (scale "major" "9 9 8 7 6 ~ 8 8"))
    $ note                   (scale "major" "8 8 ~ 7 4 _ 5 ~")
    # sound "notes"
    # gain 0.7
    # delay 0.3
    # size 0.5
    # room 0.5
    # shape 0.1
  d6
    $ whenmod 16 15 (>| note (scale "major" "8 6 9 7 6 ~"))
    $ whenmod 4 3 (>| note   (scale "major" "7 5 ~ 6 7  ~"))
    $ whenmod 2 1 (>| note   (scale "major" "9 ~ 8 7 5  ~"))
    $ note                   (scale "major" "8 8 ~ 7 5  ~")
    # sound "kurt"
    # gain 0.7
    # delay 0.7
    # room 0.5
    # shape 0.1

hush

panic
